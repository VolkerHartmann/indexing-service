# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: build

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main, development ]

env:
    # JDK version used for building jar file
    currentBuildVersion: 17
jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
#        operating-system: [ubuntu-latest, macOS-latest, windows-latest]
        operating-system: [ubuntu-latest]
         # Use both LTS releases and latest one for tests
        jdk: [ 17, 19 ]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Set up OpenJDK version ...
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu' 
        java-version: ${{ matrix.jdk }}
    - name: Pull elasticsearch image from docker
      run: docker pull elasticsearch:7.9.3
    - name: Install python
      run: sudo apt-get install --assume-yes python3 python3-setuptools python3-pip 
    - name: Update pip
      run: pip3 install --upgrade pip
    - name: Install libraries via pip (xmltodict and wget)
      run: pip3 install xmltodict wget
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run:   |
        if [ "$RUNNER_OS" == "Linux" ]; then
              ./gradlew clean build 
        elif [ "$RUNNER_OS" == "macOS" ]; then
              ./gradlew clean build 
        elif [ "$RUNNER_OS" == "Windows" ]; then
              ./gradlew.bat clean build
        else
              echo "$RUNNER_OS not supported"
              exit 1
        fi
      shell: bash
  coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Set up OpenJDK version ...
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu' 
        java-version: ${{ env.currentBuildVersion }}
    - name: Pull elasticsearch image from docker
      run: docker pull elasticsearch:7.9.3
    - name: Install python
      run: sudo apt-get install --assume-yes python3 python3-setuptools python3-pip 
    - name: Update pip
      run: pip3 install --upgrade pip
    - name: Install libraries via pip (xmltodict and wget)
      run: pip3 install xmltodict wget
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle (JDK ${{ env.currentBuildVersion }})
      run: ./gradlew clean check jacocoTestReport
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        files: ./build/reports/jacoco/test/jacocoTestReport.xml #optional
